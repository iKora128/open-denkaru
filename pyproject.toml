[project]
name = "open-denkaru"
version = "0.1.0"
description = "Open-source Electronic Medical Record (EMR) system for Japanese healthcare institutions"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # FastAPI Core
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.27.0",
    "pydantic[email]>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Database (SQLModel for modern approach)
    "sqlmodel>=0.0.14",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.9",
    "alembic>=1.13.0",
    "greenlet>=3.0.0",
    
    # Security (2025 Enhanced)
    "python-jose[cryptography]>=3.3.0",
    "argon2-cffi>=23.1.0",
    "pyotp>=2.9.0",
    "python-multipart>=0.0.6",
    "cryptography>=42.0.0",
    
    # Utilities
    "python-dateutil>=2.8.2",
    "redis>=5.0.0",
    "httpx>=0.26.0",
    
    # Monitoring
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
    
    # Medical Standards
    "fhirpy>=2.0.0",
    "hl7>=0.4.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.26.0",
    
    # Linting & Formatting
    "ruff>=0.1.9",
    "mypy>=1.8.0",
    "black>=23.12.0",
    
    # Development
    "pre-commit>=3.6.0",
    "watchfiles>=0.21.0",
    "ipython>=8.18.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["backend/app"]

[tool.ruff]
select = ["E", "F", "W", "I", "N", "UP", "ANN", "S", "B", "A", "C4", "DTZ", "T20", "RET", "SIM", "ARG", "PTH", "PGH", "PL", "TRY", "FLY", "PERF", "RUF"]
ignore = ["ANN101", "ANN102", "S104", "S108", "PLR0913"]
line-length = 100
target-version = "py311"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "ANN", "ARG", "PLR2004"]
"alembic/*" = ["S101", "ANN", "N999"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/alembic/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
